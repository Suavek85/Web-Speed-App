// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ScoreCircle snapshot should match the snapshot 1`] = `
<div>
  <svg
    viewBox="0 0 36 36"
  >
    <path
      className="blockBg blockBgAlert"
      d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"
    />
    <Animated(path)
      className="blockStats blockStatsAlert"
      d="M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831"
      style={
        Object {
          "strokeDasharray": SpringValue {
            "_children": Set {},
            "_defaultProps": Object {},
            "_lastCallId": 0,
            "_lastToId": 0,
            "_phase": "CREATED",
            "_priority": 0,
            "_state": Object {
              "pauseQueue": Set {},
              "resumeQueue": Set {},
            },
            "animation": Animation {
              "changed": false,
              "config": AnimationConfig {
                "bounce": undefined,
                "clamp": false,
                "damping": 1,
                "decay": undefined,
                "duration": undefined,
                "easing": [Function],
                "frequency": undefined,
                "friction": 26,
                "mass": 1,
                "precision": undefined,
                "progress": undefined,
                "restVelocity": undefined,
                "round": undefined,
                "tension": 170,
                "velocity": 0,
              },
              "from": undefined,
              "fromValues": Array [],
              "immediate": false,
              "onChange": undefined,
              "onRest": Array [],
              "onStart": undefined,
              "to": undefined,
              "toValues": null,
              "values": Array [],
            },
            "id": 2,
            "key": "strokeDasharray",
            "queue": undefined,
          },
        }
      }
    />
    <Animated(text)
      className="blockText blockTextAlert"
      x="18"
      y="21.5"
    >
      0
    </Animated(text)>
  </svg>
</div>
`;
