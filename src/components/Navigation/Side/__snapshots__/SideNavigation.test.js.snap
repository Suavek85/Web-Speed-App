// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SideNavigation snapshot should match the snapshot 1`] = `
<Fragment>
  <ForwardRef
    style={
      Object {
        "display": SpringValue {
          "_children": Set {
            [Function],
          },
          "_defaultProps": Object {},
          "_lastAsyncId": 0,
          "_phase": "CREATED",
          "_priority": 0,
          "_state": Object {
            "key": "display",
          },
          "_timestamps": Object {},
          "animation": Object {
            "value": [Circular],
          },
          "id": 8,
          "key": "display",
          "node": AnimatedValue {
            "_value": "none",
            "done": true,
          },
        },
        "opacity": SpringValue {
          "_children": Set {
            [Function],
          },
          "_defaultProps": Object {},
          "_lastAsyncId": 0,
          "_phase": "CREATED",
          "_priority": 0,
          "_state": Object {
            "key": "opacity",
          },
          "_timestamps": Object {},
          "animation": Object {
            "value": [Circular],
          },
          "id": 7,
          "key": "opacity",
          "node": AnimatedValue {
            "_value": 0,
            "done": true,
            "lastPosition": 0,
          },
        },
      }
    }
  />
  <ForwardRef
    style={
      Object {
        "left": SpringValue {
          "_children": Set {
            [Function],
          },
          "_defaultProps": Object {},
          "_lastAsyncId": 0,
          "_phase": "CREATED",
          "_priority": 0,
          "_state": Object {
            "key": "left",
          },
          "_timestamps": Object {},
          "animation": Object {
            "value": [Circular],
          },
          "id": 3,
          "key": "left",
          "node": AnimatedString {
            "_string": null,
            "_toString": [Function],
            "_value": 0,
            "done": true,
            "lastPosition": 0,
          },
        },
        "width": SpringValue {
          "_children": Set {
            [Function],
          },
          "_defaultProps": Object {},
          "_lastAsyncId": 0,
          "_phase": "CREATED",
          "_priority": 0,
          "_state": Object {
            "key": "width",
          },
          "_timestamps": Object {},
          "animation": Object {
            "value": [Circular],
          },
          "id": 4,
          "key": "width",
          "node": AnimatedString {
            "_string": null,
            "_toString": [Function],
            "_value": 0,
            "done": true,
            "lastPosition": 0,
          },
        },
      }
    }
  >
    <div
      style={
        Object {
          "transform": "translate(15px, 15px)",
        }
      }
    >
      <Button
        btnStyle="oval"
        handleOnClick={[Function]}
        isDesktopCloseContent={true}
      />
    </div>
  </ForwardRef>
</Fragment>
`;
